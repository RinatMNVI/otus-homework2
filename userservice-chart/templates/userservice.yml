apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service-deployment
spec:
  replicas: {{ .Values.app.replicaCount }}
  selector:
    matchLabels:
      app: user-service-app
  template:
    metadata:
      labels:
        app: user-service-app
    spec:
      containers:
        - name: users
          image: {{ .Values.app.image }}
          env:
            - name: DB_URL
              valueFrom:
                configMapKeyRef:
                  name: user-service-config
                  key: DB_URL
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: user-service-config-secret
                  key: DB_USER
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: user-service-config-secret
                  key: DB_PASS
          ports:
            - containerPort: {{ .Values.app.service.port }}
              name: web
          imagePullPolicy: IfNotPresent

---
apiVersion: v1
kind: Service
metadata:
  name: user-service
spec:
  selector:
    app: user-service-app
  ports:
    - protocol: TCP
      port: {{ .Values.app.service.port }}
      targetPort: web
  type: {{ .Values.app.service.type }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: user-service-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
    - host: arch.homework
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: user-service
                port:
                  number: {{ .Values.app.service.port }}

